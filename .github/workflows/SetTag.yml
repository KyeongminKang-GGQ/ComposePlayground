name: SetTag
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 배포 환경
        options:
          - STG
          - PROD

jobs:
  ExtractTag:
    if: ${{ startsWith(github.ref_name, 'release/') || startsWith(github.ref_name, 'hotfix/') }}
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0

        - name: Print values
          run: |
            echo environment = ${{ inputs.environment }} / branch = ${{ github.ref_name }} / latest_tag = git describe --match "1.0.0-rc*" --abbrev=0 --tags $(git rev-list --tags --max-count=1)

        - if: ${{ inputs.environment == 'STG' }}
          name: Get latest tag
          id: extract_latest_tag
          run: |
            echo "::set-output name=tag::$(git describe --match "$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')-rc*" --abbrev=0 --tags $(git rev-list --tags --max-count=1))"

        - if: ${{ inputs.environment == 'STG' }}
          name: Get latest RC tag
          id: extract_rc_version
          run: |
            echo ${{ steps.extract_latest_tag.outputs.tag }}
            if '${{ startsWith(github.ref_name, 'hotfix/') }}'
            then
              echo "::set-output name=version::$(echo ${{ steps.extract_latest_tag.outputs.tag }}) | sed -rn 's/[[:digit:]]{1,3}.[[:digit:]]{1,3}.[[:digit:]]{1,3}-rc.([[:digit:]]*)\+hotfix.[[:digit:]]{6}/\1/p'"
            else
              echo "::set-output name=version::$(echo ${{ steps.extract_latest_tag.outputs.tag }}) | sed -rn 's/[[:digit:]]{1,3}.[[:digit:]]{1,3}.[[:digit:]]{1,3}-rc.([[:digit:]]*)\+[[:digit:]]{6}/\1/p'"
            fi

        - if: ${{ inputs.environment == 'STG' }}
          name: Print latest RC tag
          run: |
            echo ${{ steps.extract_rc_version.outputs.version }}

        - if: ${{ inputs.environment == 'STG' }}
          name: Calculate new RC tag
          id: extract_new_rc_version
          run: |
            if '${{ steps.extract_rc_version.outputs.version != '' }}'
            then
              echo "::set-output name=version::$(($(echo ${{ steps.extract_rc_version.outputs.version }}) + 1))"
            else
              echo "::set-output name=version::$(echo ${{ steps.extract_rc_version.outputs.version }})"
            fi

        - name: Print new tag
          id: extract_new_tag
          run: |
            if '${{ inputs.environment == 'STG' && steps.extract_new_rc_version.outputs.version != '' }}'
            then
              if '${{ startsWith(github.ref_name, 'hotfix/') }}'
              then
                echo "::set-output name=tag::$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')-rc.${{ steps.extract_new_rc_version.outputs.version }}+hotfix.$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{6}')"
              elif '${{ startsWith(github.ref_name, 'release/') }}'
              then
                echo "::set-output name=tag::$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')-rc.${{ steps.extract_new_rc_version.outputs.version }}$(echo '${{ github.ref_name }}' | egrep -o '\+[0-9]{6}')"
              else
                echo ""
              fi
            elif '${{ inputs.environment == 'PROD' }}'
            then
              if '${{ startsWith(github.ref_name, 'hotfix/') }}'
              then
                echo "::set-output name=tag::$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')+hotfix.$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{6}')"
              elif '${{ startsWith(github.ref_name, 'release/') }}'
              then
                echo "::set-output name=tag::$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\+[0-9]{6}')"
              else
                echo ""
              fi
            else
              echo ""
            fi

        - if: ${{ steps.extract_new_tag.outputs.tag != '' }}
          name: Print tag name
          run: |
            echo ${{ steps.extract_new_tag.outputs.tag }}
