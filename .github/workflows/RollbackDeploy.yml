name: RollbackDeploy
on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        required: true
        description: 배포할 tag 이름을 입력하세요.
      region:
        type: choice
        required: true
        description: 배포할 AWS region를 선택하세요.
        options:
          - eu-west-1
          - ap-northeast-2

jobs:
  GetCommitFromTag:
    if: ${{ inputs.tag != '' }}
    uses: ./.github/workflows/GetCommitFromTag.yml
    with:
      tag: ${{ inputs.tag }}

  RollbackDeployToStg:
    if: ${{ contains(inputs.tag, 'rc') && needs.GetCommitFromTag.outputs.commit != '' }}
    needs: GetCommitFromTag
    uses: ./.github/workflows/Deploy.yml
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_STG }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_STG }}
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY_STG }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_STG }}
    with:
      taskDefinition: task-definition-stg.json
      # Reusable workflow에서 env를 공유할 수 없음
      container: lol_auth
      cluster: ecsc-an2-d-ggq
      service_prefix: ecss-an2-d-ggq
      region: ${{ inputs.region }}
      commit: ${{ needs.GetCommitFromTag.outputs.commit }}

  RollbackDeployToProd:
    if: ${{ !contains(inputs.tag, 'rc') && needs.GetCommitFromTag.outputs.commit != '' }}
    needs: GetCommitFromTag
    uses: ./.github/workflows/Deploy.yml
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY_PROD }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_PROD }}
    with:
      taskDefinition: task-definition-prod.json
      # Reusable workflow에서 env를 공유할 수 없음
      container: lol_auth
      cluster: ecsc-an2-d-ggq
      service_prefix: ecss-an2-d-ggq
      region: ${{ inputs.region }}
      commit: ${{ needs.GetCommitFromTag.outputs.commit }}

  NotifyToSlackToSuccess:
    if: ${{ success() && always() && (needs.RollbackDeployToStg.result == 'success' || needs.RollbackDeployToProd.result == 'success') }}
    needs: [GetCommitFromTag, RollbackDeployToStg, RollbackDeployToProd]
    uses: ./.github/workflows/NotifyToSlack.yml
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    with:
      environment: PROD
      version: ${{ inputs.tag }}
      status: success
      region: ${{ inputs.region }}
      commit: ${{ needs.GetCommitFromTag.outputs.commit }}

  NotifyToSlackToFail:
    if: ${{ failure() && always() && (needs.RollbackDeployToStg.result == 'failure' || needs.RollbackDeployToProd.result == 'failure') }}
    needs: [GetCommitFromTag, RollbackDeployToStg, RollbackDeployToProd]
    uses: ./.github/workflows/NotifyToSlack.yml
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    with:
      environment: PROD
      version: ${{ inputs.tag }}
      status: failure
      region: ${{ inputs.region }}
      commit: ${{ needs.GetCommitFromTag.outputs.commit }}