name: SetTagForProd

# release/hotfix 브랜치에서 main으로 머지 후 PROD 환경 배포 전 Tag를 생성하기 위한 수동 Workflow
# hotfix 브랜치면 1.0.0+hotfix.yymmdd
# release 브랜치면 1.0.0+yymmdd
# main에 Tag 생성 후 main에 생성된 Tag로 서버 배포를 진행한다.

on:
  workflow_dispatch:

jobs:
  # release/hotfix 브랜치에서 배포 버전 추출
  # hotfix 브랜치면 1.0.0+hotfix.yymmdd
  # release 브랜치면 1.0.0+yymmdd
  ExtractVersion:
    if: ${{ startsWith(github.ref_name, 'release/') || startsWith(github.ref_name, 'hotfix/') }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ env.VERSION }}
    steps:
      - uses: actions/checkout@v2
      - name: Extract Version Name
        run: |
          if '${{ startsWith(github.ref_name, 'hotfix/') }}'
          then
            echo "VERSION=$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')+hotfix.$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{6}')" >> $GITHUB_ENV
          elif '${{ startsWith(github.ref_name, 'release/') }}'
          then
            echo "VERSION=$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\+[0-9]{6}')" >> $GITHUB_ENV
          else
            echo ""
          fi

      - name: Print Version
        run: |
          echo VERSION = ${{ env.VERSION }}

  ReportIssue:
    needs: [ExtractVersion]
    runs-on: ubuntu-latest
    steps:
      - name: Send Issue Result
        uses: KyeongminKang-GGQ/action-slack@v3
        id: find-issues
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        with:
          status: report-issue
          fields: all
          milestone: ${{ needs.ExtractVersion.outputs.version }}

      - name: Print opened issues
        run: |
          echo "OPENED_ISSUE=$(echo '${{ steps.find-issues.outputs.issues }}' | jq '. | length')" >> $GITHUB_ENV

      - name: Check opened issue
        run: |
          echo OPENED_ISSUE = ${{ env.OPENED_ISSUE }}
          if '${{ env.OPENED_ISSUE != '' && env.OPENED_ISSUE > 0 }}';
          then
            echo "Unresolved issues remain!"
            exit 1
          else
            echo "There are no remaining issues"
          fi

  # release/hotfix -> main 브랜치로 merge 후 release/hotfix 브랜치 삭제 -> main 브랜치 태깅
  SetTagForProd:
    if: ${{ needs.ExtractVersion.outputs.version != '' }}
    needs: [ExtractVersion, ReportIssue]
    runs-on: ubuntu-latest
    steps:
      - name: Start SetTagForProd Workflow
        run: |
          echo Start SetTagForProd Workflow

      - uses: actions/checkout@v2

      - name: Set Git config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"

      # release/hotfix -> main 브랜치로 merge -> main 브랜치에 버전 태깅
      - name: Merge to main
        run: |
          git fetch --unshallow
          git checkout main
          git pull
          git merge --no-ff ${{ github.ref_name }} -m "Auto-merge from ${{ github.ref_name }} to main"
          git push
          git tag ${{ needs.ExtractVersion.outputs.version }}
          git push origin ${{ needs.ExtractVersion.outputs.version }}

      # github release 등록
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.ExtractVersion.outputs.version }}
          release_name: ${{ needs.ExtractVersion.outputs.version }}

      # release/hotfix 브랜치 삭제
      - name: Delete branch
        uses: dawidd6/action-delete-branch@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branches: ${{ github.ref_name }}
