name: SetTagForProd

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true

jobs:
  ExtractVersion:
    if: ${{ inputs.environment == 'PROD' && (startsWith(github.ref_name, 'release/') || startsWith(github.ref_name, 'hotfix/')) }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version_name.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Extract Version Name
        run: |
          if '${{ startsWith(github.ref_name, 'hotfix/') }}'
          then
            echo "::set-output name=version::$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')+hotfix.$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{6}')"
          elif '${{ startsWith(github.ref_name, 'release/') }}'
          then
            echo "::set-output name=version::$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\+[0-9]{6}')"
          else
            echo ""
          fi
        id: extract_version_name

      - name: Print Version
        run: |
          echo ${{ steps.extract_version_name.outputs.version }}

  SetTagForProd:
    if: ${{ needs.ExtractVersion.outputs.version != '' && inputs.environment == 'PROD' && (startsWith(github.ref_name, 'release/') || startsWith(github.ref_name, 'hotfix/')) }}
    needs: ExtractVersion
    runs-on: ubuntu-latest
    steps:
      - name: Start SetTagForProd Workflow
        run: |
          echo Start SetTagForProd Workflow

      - uses: actions/checkout@v2

      - name: Set Git config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"

      - name: Merge to main
        run: |
          git fetch --unshallow
          git checkout main
          git pull
          git merge --no-ff ${{ github.ref_name }} -m "Auto-merge from ${{ github.ref_name }} to main"
          git push
          git tag ${{ needs.ExtractVersion.outputs.version }}
          git push origin ${{ needs.ExtractVersion.outputs.version }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.ExtractVersion.outputs.version }}
          release_name: ${{ needs.ExtractVersion.outputs.version }}

      - name: Delete branch
        uses: dawidd6/action-delete-branch@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branches: ${{ github.ref_name }}
